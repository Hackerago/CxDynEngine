server:
  port: 8585 #Port for webserver to run (/health endpoint can be used to monitor service is up)

logging:
  file: cx-engines.log
  level:
    com:
      checkmarx:
        engine: info
    org:
      apache:
        http: info
      org:
        springframework: info

cx:
  cxEngineUseSSL: true #Use http/https to monitor and register Engines with
  concurrentScanLimit: 3 #Max number of concurrent scans (Engines) that DE will manage
  cxEnginePrefix: '**' #Prefix used within Registering engine in CX UI
  expireEngineBufferMins: 1 #Grace period before expiring and engine
  idleMonitorSecs: 30 #How often to check idle engines to determine if expired (ready for termination)
  queueCapacity: 100
  queueIntervalSecs: 15
  queueingEngineName: DynamicEngine #Name given to the Blocked Engine in Cx UI
  restUrl: https://cx.ken-mcdonald.com
  timeoutSecs: 120 #HTTP client request timeout (connection and read)
  terminateOnStop: false
  userName: xxx #Checkmarx user (must have access to register engines)
  password: xxx #Checkmarx password
  notificationId: #ARN for notification

cx-aws-engine:
  assignPublicIP: true
  cxEngineTimeoutSec: 600 #how many seconds to wait for instance to launch before considered a failure
  cxVersion: 8.8.0.72
  engineSizeMap:
    S: t3.large
    M: m5.xlarge
    L: r5.xlarge
    XL: r5.2xlarge
  iamProfile: cx-de
  imageId: ami-04e7c91826d179728 #AMI ID of the Engine Server
  keyName: Cx_DE #AWS Key name for support purposes
  launchTimeoutSec: 60 #Amount of time to wait for an instance to move out of PENDING state in AWS
  monitorPollingIntervalSecs: 10 #Number of seconds before checking both Instance state and checking if the the HTTP endpoint is available on the Engine
  scriptOnLaunch: scripts/launch.groovy
  scriptOnStop: scripts/stop.groovy
  scriptOnTerminate: scripts/terminate.groovy
  securityGroup: sg-04ed28298b8ec3106 #AWS Security Group to apply to launched Engines
  stopWaitTimeSecs: 30    #time to wait for a stopping engine before attempting to start 
  subnetId: subnet-39b72265 #AWS Subnet ID to launch Engines into
  tagMap:
    client: abc
    component: dynamic-engine
  usePublicUrlForCx: false #Cx will register the Engine with Public or Private IP
  usePublicUrlForMonitor: true #DE will monitor if an Engine is up and running based on Public or Private IP

cx-engine:
  engineExpireIntervalSecs: 3600 #Blocks of time an instance is paid by - this is used for expiring/termination of instances
  enginePrefix: cx-engine #Prefix given to naming the instance within the cloud provider
  pool:
    - count: 3 # Maximum number of instances that can be launched for this pool size
      minimum: 1 # Minimum number of instances to leave running at all times.  These will be launched on startup, if not already running.
      scanSize: # Name and LOC range for the above pool
        name: S # Name of this engine pool/size
        minLOC: 0
        maxLOC: 250000
    - count: 3
      minimum: 0
      scanSize:
        name: M
        minLOC: 250001
        maxLOC: 1000000
    - count: 1
      minimum: 0
      scanSize:
        name: L
        minLOC: 1000001
        maxLOC: 2500000
    - count: 1
      minimum: 0
      scanSize:
        maxLOC: 999999999
        minLOC: 2500000
        name: XL
        
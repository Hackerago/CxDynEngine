plugins {
    id 'java'
    id 'com.gradle.build-scan' version '2.3'
    id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.7.RELEASE' apply false
    id 'com.gorylenko.gradle-git-properties' version '2.0.0' apply false
}

description = 'Checkmarx SAST Dynamic Engines Parent Module'

allprojects {
    group = 'com.checkmarx'
    version = '1.4.0-SNAPSHOT'

    apply plugin: 'eclipse'

    wrapper {
        gradleVersion = '5.4.1'
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.gorylenko.gradle-git-properties'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    eclipse {
        classpath {
            downloadSources=true
            downloadJavadoc=true
        }
    }

    dependencies {
        implementation (
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-aop',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework:spring-web',
            'org.springframework.retry:spring-retry',
            'org.apache.httpcomponents:httpclient',
            'joda-time:joda-time',
            'com.fasterxml.jackson.datatype:jackson-datatype-joda',
            'commons-io:commons-io:2.6',
            'com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1',
            'org.apache.commons:commons-lang3:3.6'
        )
        implementation ('org.codehaus.groovy:groovy-all:2.5.7') {
            exclude group: 'org.codehaus.groovy', module: 'groovy-test-junit5'
        }
        if (project.hasProperty("azure")) {
            println("...Using outdated guava as per azure requirements...")
            implementation ('com.google.guava:guava:20.0')
        }else{
            implementation ('com.google.guava:guava')
        }

        annotationProcessor ('org.springframework.boot:spring-boot-configuration-processor')
        testImplementation ('org.springframework.boot:spring-boot-starter-test')

        runtimeOnly('org.springframework.boot:spring-boot-properties-migrator')

        components {
            withModule('org.springframework:spring-beans') {
                allVariants {
                    withDependencyConstraints {
                        // Need to patch constraints because snakeyaml is an optional dependency
                        it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                    }
                }
            }
        }
    }
    
    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR7'
            mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.159'
            mavenBom "com.microsoft.azure:azure-spring-boot-bom:2.1.6"
        }
    }

    bootRun {
        enabled = false
    }

    // Prevents submodule dependencies from being included in the jar itself.
    // Enable in app specific project build.gradle
    bootJar {
        enabled = false
    }

    // enable normal jar for all modules, will disable for app jar
    jar {
        enabled = true
    }
}

buildScan {
    // always accept the terms of service
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    // always publish a build scan
    publishAlways()
}

apply from: rootProject.file('gradle/profiles.gradle');
